import pygame
import random

# Initialisierung von Pygame
pygame.init()

# Spielfeldgröße und Laden des Hintergrundbildes
WIDTH, HEIGHT = 600, 400
GRID_SIZE = 20
BACKGROUND_IMAGE = pygame.image.load("Synthwave.jpg")  # Hintergrundbild laden
BACKGROUND_IMAGE = pygame.transform.scale(BACKGROUND_IMAGE, (WIDTH, HEIGHT))

# Laden des Shrek-Kopfes für den Snake-Kopf und -Körper
SNAKE_HEAD = pygame.image.load("Shrek.png")  # Ersetze mit dem tatsächlichen Dateinamen
SNAKE_HEAD = pygame.transform.scale(SNAKE_HEAD, (GRID_SIZE, GRID_SIZE))
SNAKE_BODY = SNAKE_HEAD.copy()

FOOD_COLOR = (255, 0, 0)
TEXT_COLOR = (255, 255, 255)

# Fenster erstellen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")
clock = pygame.time.Clock()

# Snake-Startposition
snake = [(100, 100), (90, 100), (80, 100)]
direction = "RIGHT"
food = (random.randrange(0, WIDTH, GRID_SIZE), random.randrange(0, HEIGHT, GRID_SIZE))
score = 0

# Schriftart für Score-Anzeige
font = pygame.font.Font(None, 36)

# Game Over Nachrichten
game_over_messages = [
    "Das ist ja nicht so gut gelaufen. Probier's nochmal!",
    "Anfängerfehler. Jetzt streng dich mal an!",
    "Hätte hätte Snake Game Kette. Da machste nix, probier's nochmal!",
    "Digga, dein Versagen kotzt mich an. Vallah!",
    "Du hast verloren. Geh nach Hause.",
    "Du hast schwach angefangen und dann stark nachgelassen!"
]

def draw_snake():
    for i, segment in enumerate(snake):
        if i == 0:
            screen.blit(SNAKE_HEAD, segment)
        else:
            screen.blit(SNAKE_BODY, segment)

def draw_food():
    pygame.draw.rect(screen, FOOD_COLOR, pygame.Rect(food[0], food[1], GRID_SIZE, GRID_SIZE), border_radius=5)

def draw_score():
    score_text = font.render(f"Score: {score}", True, TEXT_COLOR)
    screen.blit(score_text, (10, 10))

def game_over():
    screen.fill((0, 0, 0, 180))  # Dunkler Overlay für Lesbarkeit
    message = random.choice(game_over_messages)
    lines = message.split(". ")  # Zeilenumbruch an Punkt und Leerzeichen
    y_offset = HEIGHT // 2 - (len(lines) * 20)  # Mittig ausrichten
    for line in lines:
        game_over_text = font.render(line, True, TEXT_COLOR)
        text_rect = game_over_text.get_rect(center=(WIDTH // 2, y_offset))
        screen.blit(game_over_text, text_rect)
        y_offset += 40
    pygame.display.flip()
    
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return False
            if event.type == pygame.KEYDOWN and event.key == pygame.K_r:
                return True

def main():
    global direction, snake, food, score
    running = True
    while running:
        screen.blit(BACKGROUND_IMAGE, (0, 0))
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP and direction != "DOWN":
                    direction = "UP"
                elif event.key == pygame.K_DOWN and direction != "UP":
                    direction = "DOWN"
                elif event.key == pygame.K_LEFT and direction != "RIGHT":
                    direction = "LEFT"
                elif event.key == pygame.K_RIGHT and direction != "LEFT":
                    direction = "RIGHT"
        
        # Bewegung der Schlange
        x, y = snake[0]
        if direction == "UP":
            y -= GRID_SIZE
        elif direction == "DOWN":
            y += GRID_SIZE
        elif direction == "LEFT":
            x -= GRID_SIZE
        elif direction == "RIGHT":
            x += GRID_SIZE
        
        new_head = (x, y)
        if new_head in snake or x < 0 or x >= WIDTH or y < 0 or y >= HEIGHT:
            if game_over():
                snake = [(100, 100), (90, 100), (80, 100)]
                direction = "RIGHT"
                food = (random.randrange(0, WIDTH, GRID_SIZE), random.randrange(0, HEIGHT, GRID_SIZE))
                score = 0
                continue
            else:
                break
        
        snake.insert(0, new_head)
        if new_head == food:
            score += 10
            food = (random.randrange(0, WIDTH, GRID_SIZE), random.randrange(0, HEIGHT, GRID_SIZE))
        else:
            snake.pop()
        
        draw_snake()
        draw_food()
        draw_score()
        pygame.display.flip()
        clock.tick(10 + score // 20)

    pygame.quit()

if __name__ == "__main__":
    main()
